generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  username    String
  email       String   @unique
  password    String
  picture     String?
  bio         String?
  blogs       Blog[]
  notes       Note[]
  tags        Tag[]
  resetToken  String? @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model Blog {
  id             Int              @id @default(autoincrement())
  userId         Int
  url            String
  title          String?
  isRead         Boolean          @default(false)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @default(now())
  user           User             @relation(fields: [userId], references: [id])
  notes          Note[]
  categories     Category[]       @relation("BlogCategories") // Add inverse relation
  tags           Tag[]            @relation("BlogTags")
  blogTags       BlogTags[]
  BlogCategories BlogCategories[]
}

model Category {
  id             Int              @id @default(autoincrement())
  userId         Int
  name           String           @unique
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @default(now())
  blogs          Blog[]           @relation("BlogCategories") // Add inverse relation
  BlogCategories BlogCategories[]
}

model BlogCategories {
  blogId     Int
  categoryId Int
  blog       Blog     @relation(fields: [blogId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([blogId, categoryId])
}

model Tag {
  id        Int        @id @default(autoincrement())
  userId    Int
  name      String
  user      User       @relation(fields: [userId], references: [id])
  blogs     Blog[]     @relation("BlogTags")
  blogTags  BlogTags[]
  createdAt DateTime   @default(now())
}

model BlogTags {
  blogId    Int
  tagId     Int
  createdAt DateTime @default(now())
  blog      Blog     @relation(fields: [blogId], references: [id])
  tag       Tag      @relation(fields: [tagId], references: [id])

  @@id([blogId, tagId])
}

model Note {
  id     Int    @id @default(autoincrement())
  blogId Int
  userId Int
  text   String
  blog   Blog   @relation(fields: [blogId], references: [id])
  user   User   @relation(fields: [userId], references: [id])
}
